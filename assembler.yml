---
-
  image:
    dockerhub: nucleotides/spades
    repo: https://github.com/nucleotides/docker-spades
    source: null
  pmid: 22506599
  homepage: http://bioinf.spbau.ru/spades
  mailing_list:
  description: >
    The SPAdes assembler is developed by Algorithmic Biology Lab at the St. Petersburg Academic University.
  procs:
    - default
    - single-cell
    - careful
    - single-cell-careful
-
  image:
    dockerhub: nucleotides/idba
    repo: https://github.com/nucleotides/docker-idba
    source: https://code.google.com/p/hku-idba/
  pmid: 22495754
  homepage: http://i.cs.hku.hk/~alse/hkubrg/projects/idba/
  mailing_list: https://groups.google.com/forum/#!forum/hku-idba
  description: >
    IDBA (iterative De Bruijn Graph De Novo Assembler) is developed by the Bioinfomatics Research Group in the department of Computer Science at the University of Hong Kong.
  procs:
    - default
    - single-cell
    - idba
-
  image:
    dockerhub: nucleotides/velvet-optimiser
    repo: https://github.com/nucleotides/docker-velvet-optimiser
    source: https://github.com/Victorian-Bioinformatics-Consortium/VelvetOptimiser
  pmid:
  homepage: http://bioinformatics.net.au/software.velvetoptimiser.shtml
  mailing_list:
  description: >
    The velvet optimiser tools tests multiple kmer values for velvet and returns the best assembly. This assembler is developed by the Victorian Bioinformatics Consortium.
  procs:
    - default
-
  image:
    dockerhub: nucleotides/velvet
    repo: https://github.com/nucleotides/docker-velvet
    source: https://github.com/dzerbino/velvet
  pmid: 18349386
  homepage: https://www.ebi.ac.uk/~zerbino/velvet/
  description: >
    The velvet assembler was one of the first assemblers created for short read sequencing. Velvet was developed at the European Bioinformatics Institute.
  procs:
    - default
    - adaptive
    - careful
-
  image:
    dockerhub: nucleotides/abyss
    repo: https://github.com/nucleotides/docker-abyss
    source: https://github.com/bcgsc/abyss/
  pmid: 19251739
  homepage: http://www.bcgsc.ca/platform/bioinfo/software/abyss
  mailing_list:
  description: >
    The ABySS (Assembly By Short Sequences) assembler is developed by Canada's Michael Smith Genome Science Centre.
  procs:
    - default
    - adaptive
    - k-32
    - k-96
-
  image:
    dockerhub: nucleotides/soap-denovo
    repo: https://github.com/nucleotides/docker-soap-denovo
    source: http://sourceforge.net/projects/soapdenovo2/files/SOAPdenovo2/
  pmid: 23587118
  homepage: http://soap.genomics.org.cn/soapdenovo.html
  mailing_list:
  description: >
    The short oligonucleotide analysis package (SOAP) is developed by BGI HK Research Institute in Hong Kong.
  procs:
    - default
    - kmer-10-cutoff
-
  image:
    dockerhub: koadman/docker-a5-miseq
    repo: https://github.com/koadman/docker-A5-miseq
    source: http://sourceforge.net/p/ngopt/code/HEAD/tree/trunk/
  pmid:
  homepage: http://sf.net/p/ngopt/
  mailing_list: https://groups.google.com/forum/#!forum/ngopt
  description: >
    The A5-miseq pipeline automates all the usual steps in genome assembly and is tuned to assemble microbial genomes from low coverage (<50x) Illumina data on laptop or desktop compute hardware. It was developed by Andrew Tritt and Aaron Darling.
  procs:
    - default
-
  image:
    dockerhub: egoltsman/meraculous2-docker
    repo:
    source: https://sourceforge.net/projects/meraculous20/files/
  pmid: 21876754
  homepage: http://jgi.doe.gov/our-science/science-programs/plant-genomics/computational-methods-and-systems/
  mailing_list:
  description: >
    Meraculous2 is a scalable and efficient assembler geared for large eukaryotic genomes, developed by DOE Joint Genome Institute.
  procs:
    - k41
-
  image:
    dockerhub: ppcherng/squeezambler
    repo: https://github.com/ppcherng/squeezambler
    source: http://sourceforge.net/projects/hyda/files/
  pmid: 23918251
  homepage: http://chitsazlab.org/software/squeezambler/
  mailing_list:
  description: >
    Squeezamler is a divide-and-conquer algorithm for economical sequencing and assembly of all distinct genomes in a bacterial sample. The key idea here is exploiting sparsity, which is the small number of distinct genomes (~1000) in comparison to the huge number of cells (~100 trillion).
  procs:
    - default
    - careful
-
  image:
    dockerhub: nucleotides/minia
    repo: https://github.com/rchikhi/docker-minia
    source:
  pmid: 24040893
  homepage: http://minia.genouest.org/
  mailing_list: https://www.biostars.org/t/minia/
  description: >
    Minia is a short-read assembler based on a de Bruijn graph, capable of assembling a human genome on a desktop computer in a day. Minia is developed at the IRISA institute in France.
  procs:
    - default
    - careful
-
  image:
    dockerhub: nucleotides/sga
    repo: https://github.com/nucleotides/docker-sga
    source: https://github.com/jts/sga
  pmid: 22156294
  homepage: https://github.com/jts/sga/wiki
  mailing_list: https://groups.google.com/forum/#!forum/sga-users
  description: >
    De novo sequence assembler using string graphs developed at the Wellcome Trust Sanger Institute in the UK.
  procs:
    - default
    - careful
-
  image:
    dockerhub: nucleotides/megahit
    repo: https://github.com/nucleotides/docker-megahit
    source: https://github.com/voutcn/megahit
  pmid:
  homepage:
  mailing_list:
  description: >
    MEGAHIT is a NGS de novo assembler for assembling large and complex metagenomics data in a time- and cost-efficient manner, it is developed in the department of Computer Science at the University of Hong Kong.
  procs:
    - default
    - no-mercy
-
  image:
    dockerhub: nucleotides/sparse-assembler
    repo: https://github.com/nucleotides/docker-sparse-assembler
    source: http://sourceforge.net/projects/sparseassembler/
  pmid: 22537038
  homepage: https://sites.google.com/site/sparseassembler/
  mailing_list:
  description: >
    SparseAssembler utilises a sparse k-mer graph structure evolved from the de Bruijn graph and is developed at the Chinese Academy of Sciences in Menglun.
  procs:
    - default
    - careful
